name: build_publish
on:
  workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build_wheels:
    name: Build wheel and sdist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install -r requirements.txt
      - name: Build wheel and sdist
        run: |
          python -m build
      - name: Validate built packages
        run: |
          echo "Listing built packages:"
          ls -la dist/
          echo "Validating package integrity:"
          python -m pip install twine
          python -m twine check dist/*
      - name: Run tests
        run: |
          python -m unittest discover tests
      - name: Upload wheel and sdist
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/*



  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/setup-python@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: final_dist
      - name: Validate downloaded packages
        run: |
          echo "Downloaded packages:"
          ls -la final_dist/
          echo "Validating package integrity before publishing:"
          python -m pip install twine
          python -m twine check final_dist/*
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: final_dist

  release:
    needs: [build_wheels, upload_pypi]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git describe
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: release_files
      - name: List release files
        run: |
          echo "Release files:"
          ls -la release_files/
      - name: Get release tag
        id: get_tag
        run: |
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: release_files/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

